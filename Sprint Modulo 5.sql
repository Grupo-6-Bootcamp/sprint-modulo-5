-- MySQL Script generated by MySQL Workbench
-- Mon May 29 12:01:51 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema enquepuedoayudarte
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema enquepuedoayudarte
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `enquepuedoayudarte` DEFAULT CHARACTER SET utf8 ;
USE `enquepuedoayudarte` ;

CREATE USER 'admin15'@'localhost' IDENTIFIED BY 'adminpass';
GRANT ALL PRIVILEGES ON enquepuedoayudarte.* TO 'admin15'@'localhost';
FLUSH PRIVILEGES;

-- -----------------------------------------------------
-- Table `enquepuedoayudarte`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `enquepuedoayudarte`.`usuario` (
  `idusuario` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(15) NOT NULL,
  `apellido` VARCHAR(15) NOT NULL,
  `edad` INT UNSIGNED NOT NULL,
  `correoelectronico` VARCHAR(45) NOT NULL,
  `vecesuso` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`idusuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `enquepuedoayudarte`.`operario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `enquepuedoayudarte`.`operario` (
  `idoperario` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(15) NOT NULL,
  `apellido` VARCHAR(15) NOT NULL,
  `edad` INT NOT NULL,
  `correoelectronico` VARCHAR(45) NOT NULL,
  `vecessoporte` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`idoperario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `enquepuedoayudarte`.`soporte`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `enquepuedoayudarte`.`soporte` (
  `idsoporte` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `idusuario` INT UNSIGNED NOT NULL,
  `idoperario` INT UNSIGNED NOT NULL,
  `fecha` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
  `evaluacion` INT NOT NULL,
  PRIMARY KEY (`idsoporte`),
  INDEX `soporte_idusuario_fk_idx` (`idusuario` ASC) VISIBLE,
  INDEX `soporte_idoperario_fk_idx` (`idoperario` ASC) VISIBLE,
  CONSTRAINT `soporte_idusuario_fk`
    FOREIGN KEY (`idusuario`)
    REFERENCES `enquepuedoayudarte`.`usuario` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `soporte_idoperario_fk`
    FOREIGN KEY (`idoperario`)
    REFERENCES `enquepuedoayudarte`.`operario` (`idoperario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

INSERT INTO usuario (nombre, apellido, edad, correoelectronico, vecesuso) VALUES
('Juan', 'Pérez', 25, 'juan@example.com', 3),
('María', 'Gómez', 30, 'maria@example.com', 5),
('Carlos', 'López', 28, 'carlos@example.com', 2),
('Ana', 'Martínez', 35, 'ana@example.com', 4),
('Pedro', 'Sánchez', 32, 'pedro@example.com', 1);

INSERT INTO operario (nombre, apellido, edad, correoelectronico, vecessoporte) VALUES
('Luisa', 'García', 22, 'luisa.garcia@example.com', 2),
('Javier', 'Hernández', 31, 'javier.hernandez@example.com', 4),
('Fernanda', 'Rojas', 26, 'fernanda.rojas@example.com', 3),
('Diego', 'Silva', 29, 'diego.silva@example.com', 3),
('Valentina', 'Torres', 24, 'valentina.torres@example.com', 3);

INSERT INTO soporte (idusuario, idoperario, evaluacion)
VALUES 
(1, 1, 5),
(2, 3, 4),
(3, 2, 5),
(4, 5, 3), 
(5, 4, 4), 
(2, 2, 5), 
(2, 3, 2), 
(3, 4, 4), 
(4, 3, 2), 
(1, 2, 1);

SELECT * FROM soporte;

SELECT * FROM soporte ORDER BY evaluacion DESC LIMIT 3;
SELECT * FROM soporte ORDER BY evaluacion ASC LIMIT 3;

SELECT * FROM operario ORDER BY vecessoporte DESC LIMIT 1;

SELECT * FROM usuario WHERE vecesuso = (SELECT MIN(vecesuso) FROM usuario);

UPDATE usuario SET edad = edad + 10 WHERE idusuario <= 3;
SELECT * FROM usuario;

ALTER TABLE usuario RENAME COLUMN correoelectronico TO email;
ALTER TABLE operario RENAME COLUMN correoelectronico TO email;

SELECT * FROM operario WHERE edad > 20;